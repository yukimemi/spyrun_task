# =============================================================================
# File        : spyrun.toml
# Author      : yukimemi
# Last Change : 2025/05/03 16:19:14.
# =============================================================================

[vars]
version = '20250503_161914'
base_local = '{{ cfg_dir }}\..'
common_ps = '{{ cmd_dir }}\..\core\cfg\common.ps1'
hostname = '{{ env(arg="COMPUTERNAME") }}'

z_funcs = '''
$ErrorActionPreference = "Stop"
if (Test-Path '{{ common_ps }}') {
  . '{{ common_ps }}'
}
'''

trap_no_stop = '''
log "spy_name: [{{ spy_name }}]"
trap {
  log "{{ spy_name }} Error ! $_"
}
'''

trap_stop = '''
log "spy_name: [{{ spy_name }}]"
trap {
  log "{{ spy_name }} Error ! $_"
  "spy_name: [{{ spy_name }}] $_" | Set-Content -Encoding utf8 "{{ stop_path }}"
}
'''

trap_stop_force = '''
log "spy_name: [{{ spy_name }}]"
trap {
  log "{{ spy_name }} Error ! $_"
  "spy_name: [{{ spy_name }}] $_" | Set-Content -Encoding utf8 "{{ stop_force_path }}"
}
'''

[cfg]
stop_flg = '{{ base_local }}\stop.flg'

[log]
path = '{{ base_local }}\log\{{ cmd_stem }}.log'
level = 'info'

[init]
cmd = 'powershell'
arg = [
  '-NoProfile',
  '-Command',
  '''& {
  {{ z_funcs }}
  {{ trap_stop_force }}
  log "{{ version }}"
  New-Item -Force -ItemType Directory "{{ base_local }}\ng" | Out-Null
  New-Item -Force -ItemType Directory "{{ base_local }}\if\sync" | Out-Null
  New-Item -Force -ItemType Directory "{{ base_local }}\if\sync_result" | Out-Null
  New-Item -Force -ItemType Directory "{{ base_local }}\if\remove" | Out-Null
  New-Item -Force -ItemType Directory "{{ base_local }}\if\remove_result" | Out-Null
  New-Item -Force -ItemType Directory "{{ base_local }}\if\exec" | Out-Null
  New-Item -Force -ItemType Directory "{{ base_local }}\if\exec_result" | Out-Null
}''',
]

# Update cfg toml when there is a change.
[[spys]]
name = 'update_cfg'
input = '{{ cfg_dir }}'
output = '{{ log_dir }}\{{ spy_name }}\{{ event_stem }}'
debounce = 5000
[[spys.patterns]]
pattern = 'spyrun\.toml$'
cmd = 'powershell'
arg = ['-NoProfile', '-Command', '''& {
  {{ z_funcs }}
  {{ trap_stop_force }}
  throw "Update config {{ event_path }}"
}''']

# Execute cmd/global
[[spys]]
name = 'cmd_global'
input = '{{ base_local }}\cmd\global'
output = '{{ log_dir }}\{{ spy_name }}\{{ event_stem }}'
debounce = 5000
[spys.poll]
interval = 10000
[spys.walk]
delay = [0, 60000]
pattern = '\.cmd$|\.exe$|\.bat$'
# Execute cmd/local
[[spys]]
name = 'cmd_local'
input = '{{ base_local }}\cmd\local\\{{ hostname }}'
output = '{{ log_dir }}\{{ spy_name }}\{{ event_stem }}'
debounce = 5000
[spys.poll]
interval = 10000
[spys.walk]
delay = [0, 60000]
pattern = '\.cmd$|\.exe$|\.bat$'

# Sync
[[spys]]
name = 'sync'
input = '{{ base_local }}\if\sync'
output = '{{ log_dir }}\{{ spy_name }}'
debounce = 5000
limitkey = '{{ event_path }}'
[spys.walk]
pattern = '\.json$'
[[spys.patterns]]
pattern = '\.json$'
cmd = 'powershell'
arg = ['-NoProfile', '-Command', '''& {
  {{ z_funcs }}
  log "spy_name: [{{ spy_name }}]"
  log "event_path: {{ event_path }}"
  log "event_kind: {{ event_kind }}"
  Invoke-Sync ([PSCustomObject]@{ path = '{{ event_path }}' })
}''']

# Remove
[[spys]]
name = 'remove'
input = '{{ base_local }}\if\remove'
output = '{{ log_dir }}\{{ spy_name }}'
debounce = 5000
limitkey = '{{ event_path }}'
[spys.walk]
pattern = '\.json$'
[[spys.patterns]]
pattern = '\.json$'
cmd = 'powershell'
arg = ['-NoProfile', '-Command', '''& {
  {{ z_funcs }}
  log "spy_name: [{{ spy_name }}]"
  log "event_path: {{ event_path }}"
  log "event_kind: {{ event_kind }}"
  Invoke-Remove ([PSCustomObject]@{ path = '{{ event_path }}' })
}''']

# Exec
[[spys]]
name = 'exec'
input = '{{ base_local }}\if\exec'
output = '{{ log_dir }}\{{ spy_name }}'
debounce = 5000
limitkey = '{{ event_path }}'
[spys.walk]
pattern = '\.json$'
[[spys.patterns]]
pattern = '\.json$'
cmd = 'powershell'
arg = ['-NoProfile', '-Command', '''& {
  {{ z_funcs }}
  log "spy_name: [{{ spy_name }}]"
  log "event_path: {{ event_path }}"
  log "event_kind: {{ event_kind }}"
  Invoke-Exec ([PSCustomObject]@{ path = '{{ event_path }}' })
}''']
